#!/usr/bin/env bash
# CROSfetch: My clone of neofetch, specialised for chromeOS

# Structure:
# basic prompt
# --------------
# Username
# Google account usernames
# ----------
# OS
# Channel
# Kernel
# Hostname
# Host
# Uptime
# --------
# Package Managers
# Packages
# ---------
# Terminal
# Shell
# Program locations ($PATH)
# ---------
# DE
# WM
# Theme
# ---------
# CPU
# GPU
# RAM amount
# Storage amount
# ----------


# Make a basic prompt as a title
get_title() {
  title_ps1="\033[01;32m$USER@$HOSTNAME \033[00m"
  
}
  
# Get username of the current user (It should always be chronos)
get_username() {
  username="$USER"
}

# Find the usernames of all logged in google accounts
get_google-accounts() {
   for img in /home/chronos/*.jpg; do                  # For every jpeg file in /home/chonos:
     img="$(echo $img | sed 's/\/home\/chronos\///')"  # Remove the path from the name
     while [ "$char" != "@" ]; do                      # Until the '@' symbol,
       char="$(echo ${img[*]: -1})"                    # Set $char to the last character in the file name
       img="$(echo $img | sed 's/.$//')"               # Remove the last character in the file name
     done
     g_accs=""$g_accs""$img" "                         # Add the name to 'g_accs'
     char=""                                           # Set $char to anything other than "@", so the while loop will run
   done
  unset img                                            # $img is not needed anymore
  unset char                                           # $char is not needed anymore
}

# Get the hostname (this should always localhost)
get_hostname() {
  hostname="$(uname -n)"
}

# Get your OS, wheather it be ChromeOS, ChromeOS Flex, ChromiumOS, or some other fork
get_os() {
  OS="$(cat /etc/os-release.d/NAME)"                                       # Get the base name from /etc/os-release.d/NAME and put it in $OS
  if [[ $LSB_RELEASE == *"CHROME_MILESTONE="* ]]; then                     # Just to make sure that the version tracker exists
  # Add the main version number to $OS
    OS="$OS $(cat /etc/lsb-release | grep CHROME_MILESTONE | sed 's/CHROMEOS_RELEASE_CHROME_MILESTONE=//')"  # Remove all but the version, add it to $OS
  fi
  if [[ $LSB_RELEASE == *"(Official Build)"* ]]; then                      # If lsb-release says the release if official, 
    OS="$OS (Official Build)"                                              # add it to $OS
  fi
  
}

# Get your update channel
get_channel() {
  if [[ $LSB_RELEASE == *"stable"* ]]; then
    channel="Stable"
    
  elif [[ $LSB_RELEASE == *"beta"* ]]; then    
    channel="Beta"
  
  elif [[ $LSB_RELEASE == *"dev"* ]]; then
    channel="Developer"
    
  elif [[ $LSB_RELEASE == *"canary"* ]]; then
    channel="Canary"
  
  else
    channel="unknown"
  
  fi
    
}

# Get the cp architecture
get_arch() {
  arch="$(uname -m)"

}

# Get the host device model
get_host() {
  

}

# Get the kernel name and release
get_kernel() {
  kernel="$(uname -rs)"
}

# Get the system uptime by removing the 'up ' from uptime -p
get_uptime() {
  uptime="$(uptime -p | sed 's/^.//;s/^.//;s/^.//')"
  
}

package managers
packages

# Get your terminal - is it chrome, or chromium?
get_terminal() {
   if [ -f /opt/google/chrome/chrome ]; then           
      terminal="crosh - Google Chrome"
   else
      terminal="crosh - Chromium"
   fi
}

# Get the current shell
get_shell() {
  if [ -n $BASH_VERSION ]; then
     shell="Bash $BASH_VERSION"
  else
     shell="Dash"
  fi

}

# Get your desktop (Which is the browser)
get_de() {
  if [ -f /opt/google/chrome/chrome ]; then           
      DE="Google Chrome"
   else
      DE="Chromium"
   fi
}

# Assue the WM is ash. It should be.
get_wm() {
  WM="Ash"
}

# Get your system theme (light or dark)
get_theme() {
  theme=""
  
}
# Get 
get_cpu() {
  cpu="$(uname -p)"
  
}

# Get your GPU
get_gpu() {
  
  
}

# Get total and free RAM
get_ram() {
  RAM="$(free | )"
  
}

# Get the size of your boot drive
get_drive() {

  
}


#
# Logos And Images
#


# Set the logo 
case
