#!/usr/bin/env bash
# CROSfetch: My clone of neofetch, specialised for chromeOS

# Structure:
# basic prompt
# --------------
# Username
# Google account usernames
# ----------
# OS
# Channel
# Kernel
# Hostname
# Host
# Uptime
# --------
# Package Managers
# Packages
# ---------
# Terminal
# Shell
# Program locations ($PATH)
# ---------
# DE
# WM
# Theme
# ---------
# CPU
# GPU
# RAM amount
# Storage amount
# ----------

# Make a basic prompt as a title
get_title() {
  title_ps1="\033[01;32m$USER@$HOSTNAME \033[00m"
  
}

# Get username of the current user (It should always be chronos)
get_username() {
  username="$USER"
}

# Find the usernames of all logged in google accounts
get_google-accounts() {
   for img in /home/chronos/*.jpg; do                  # For every jpeg file in /home/chonos:
     img="$(echo $img | sed 's/\/home\/chronos\///')"  # Remove the path from the name
     while [ "$char" != "@" ]; do                      # Until the '@' symbol,
       char="$(echo ${img[*]: -1})"                    # Set $char to the last character in the file name
       img="$(echo $img | sed 's/.$//')"               # Remove the last character in the file name
     done
     g_accs=""$g_accs""$img" "                         # Add the name to 'g_accs'
     char=""                                           # Set $char to anything other than "@", so the while loop will run
   done
  unset img                                            # $img is not needed anymore
  unset char                                           # $char is not needed anymore
}

# Get the hostname (this should always localhost)
get_hostname() {
  hostname="$(uname -n)"
}

# Get your OS, wheather it be ChromeOS, ChromeOS Flex, ChromiumOS, or some other fork
get_os() {
  OS="ChromeOS"
  # I'll do this later
}

# Get the cp architecture
get_arch() {
  arch="$(uname -m)"

}

# Get the host device model
get_device() {
  

}

# Get the kernel name and release
get_kernel() {
  kernel="$(uname -rs)"
}

# Get the system uptime by removing the 'up ' from uptime -p
get_uptime() {
  uptime="$(uptime -p | sed 's/^.//;s/^.//;s/^.//')"
  
}

package managers
packages

# 
get_terminal() {
   if [  ]; then               # Is it chrome, or chromium?
      terminal="crosh - Google Chrome"
   else
      terminal="crosh - Chromium"
   fi
}

# Get the current shell
get_shell() {
  if [ -n $BASH_VERSION ]; then
     shell="Bash $BASH_VERSION"
  else
     shell="sh/dash"
  fi

}

de=
wm=
theme=

# Get 
get_cpu() {
  cpu="$(uname -p)"
  
}
gpu=
mem=
drive=               # Boot Drive
