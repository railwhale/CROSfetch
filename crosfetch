#!/usr/bin/env bash
# CROSfetch: My clone of neofetch, specialised for ChromeOS

# Structure:
# basic prompt
# --------------
# Username
# Google account usernames
# ----------
# Hostname
# OS
# Kernel 
# Uptime
# --------
# Package Managers
# Packages
# ---------
# Terminal
# Shell
# ---------
# DE
# WM
# Theme
# WM Theme
# Icon pack
# ---------
# CPU
# GPU
# RAM
# Boot Drive
# ----------

# Make a basic prompt as a title
get_title() {
  title_ps1="\033[01;32m$USER@$HOSTNAME \033[00m"
  
  }

# Get username of the current user (It's should always be chronos)
get_username() {
  username="$USER"
 }

# Find the usernames of all logged in google accounts
get_google-accounts() {
   g_accs=""
     for img in /home/chronos/*.jpg; do     # For every jpeg file in /home/chonos:
       while $char != '@' :                 # Until the '@' symbol,
       do 
       char="$(echo ${img[*]: -1})"         # Set $char to the last character in the file name
       img=="$(echo $img | sed 's/.$//')"   # Remove the last character in $img
     done
     img="$(echo $img | sed 's/\/home\/chronos\///')"
     img="$(string//[.]/' ')"               # Replace periods with spaces |  '.' -> ' '
     g_accs="$g_accs\n$img"                 # Add the name to 'g_accs'
     export $g_accs
   unset img                                # img is not needed anymore
}

# Get the hostname (this should always localhost, )
get_hostname() {
  hostname="$(uname -n)"
}

# Get your OS, wheather it be ChromeOS, ChromeOS Flex, ChromiumOS, or some other fork
get_os() {
  OS=
  
  }

# Get the kernel name and release
get_kernel() {
  kernel="$(uname -rs)"
}

# Get the system uptime by removing the 'up ' from uptime -p
get_uptime() {
  uptime="$(uptime -p | sed 's/^.//;s/^.//;s/^.//')"
  
  }

package managers
packages

terminal=
shell= if -v $BASH_VERSION
de=
wm=
theme=
wm_theme=
icons=
cpu=
gpu=
mem=
drive=               # Boot Drive
