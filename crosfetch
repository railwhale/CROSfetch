#!/usr/bin/env bash
# 
# CROSfetch: My clone of neofetch, specialised for Chrome OS
# https://github.com/railwhale/CROSfetch
#
# The MIT License (MIT)
#
# Copyright (c) 2022 Reuben Ferabend
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

version=0.0


# Default Options
# These should be configured in the config file /usr/local/bin/crosfetch.conf
# You can edit it with crosfetch --edit-conf
# The config file is in /usr/local/bin because that is the only place Chrome OS will not warn you about executing long scripts

# Title
# Weather to show the $USER@$HOSTNAME prompt at the top
# Default: on
do_title="on"

# Line
# Weather to have a line of dashes seperating different info groups
# Default: on
# Options: on, off, title
# "title": only use the line to underline the title
do_line="on"

# Google accounts on device
# Weather to show the usernames of all Google accounts on the device
# Default: on
# Options: on, off, count, name
# 'count': Only display a number of accounts on device, not the usernames
# 'name': Only
do_g_accounts="on"

# Operating system
# Weather to show your OS
# Default: on
# Options: on, off, name, version, build
# --os basic: <OS>
# 'on': <OS> <maybe arch> <Big Version> <Build> <maybe channel>
do_os="on"

# Update Channel
# Weather to show yourupdate channel
# Default: auto
# Options: on, off, auto
# 'auto'
do_channel="auto"

# OS Architecture
# Weather to show the OS architecture
# Default: auto
# Options: on, off, auto
# 'auto' dislay architecture with os
do_arch="auto"

# Host Model
# Weather to print the model of the host device
# Default: on
# Options: on, off
# 
do_host="on"

# Kernel
# Weather to show the kernel
# Default: on
# Options: on, off, version, name
# 'version': print only the kernel version e.g; 5.10.365
# 'name': print only the kernel name e.g; Linux
do_kernel="on"

# Uptime
# Weather to print system uptime
# Default: on
# Options: on, off, short 
#
do_uptime="on"

# Package Managers
# Weather to print package manager names
# Default: auto
# Options: on, off, auto 
# 'auto': print names with 'packages' line
do_package_managers="auto"

# Packages
# Weather to print 
# Default: 
# Options: on, off, total
# 'total': Print a total of all installed package across all package managers.
# (if package managers is on auto, all package managers will be in one set of brackets)
do_packages="on"

# Terminal
# Weather to print current terminal
# Default: 
# Options: on, off, 
do_terminal="on"

# Shell
# Weather to print 
# Default: 
# Options: on, off, 
do_shell="on"

# Program Locations
# Weather to print 
# Default: 
# Options: on, off, 
do_path="off"

# Desktop Environment
# Weather to print 
# Default: on
# Options: on, off, 
do_de="on"

# Window Manager
# Weather to print current window manager
# Default: 
# Options: on, off
do_wm="on"

# System Theme
# Weather to print your system theme
# Default: on
# Options: on, off, 
do_theme="on"

# CPU
# Weather to print your CPU
# Default: 
# Options: on, off, 
do_cpu="on"

# 
# Weather to print 
# Default: 
# Options: on, off, 
#
do_gpu="on"

# 
# Weather to print 
# Default: 
# Options: on, off, 
#
do_ram="on"

# 
# Weather to print 
# Default: 
# Options: on, off, 
#
do_disk="off"


# Config
# Get configuration for run
# First the config file is sourced, then any arguments passed from the user
get_config() {
  case $1 in
  *"--config"*)
    . /usr/local/bin/crosfetch.conf
  ;;
  
}


# Information functions

# Make a basic prompt as a title
get_title() {
  title="\033[01;32m$USER@$HOSTNAME \033[00m"
  
}

# Get a line the length of the title
get_line() {
  seperate="-----------------"
}

# Find the usernames of all logged in google accounts
get_google_accounts() {
  for img in /home/chronos/*@*.jpg; do                # For every jpeg file in /home/chonos:
    img="$(echo $img | sed 's/.*os\///')"             # Remove the path from the name (everything before 'os/')
    img="$(echo $img | sed 's/@.*//')"                # Remove the "@" and everything past it
    g_accs="$img, $g_accs"                            # Add the name to $g_accs
    g_accs_count="$(($g_accs_count+1))"               # Count 1 more account
  done
  g_accs="$(echo $g_accs | sed 's/.$//')"
  count="yes"
  if [[ $count == "yes" ]]; then
    g_accs="$g_accs ($g_accs_count)"
  fi
  unset g_accs_count
  unset img                                           # $img is not needed anymore
}

# Get your OS, wheather it be ChromeOS, ChromeOS Flex, ChromiumOS, or some other fork
get_os() {
  OS="$(cat /etc/lsb-release | grep RELEASE_NAME | sed 's/.*=//')"   # Get the base name from /etc/os-release and put it in $OS
  # Add the main version number to $OS
  OS="$OS $(cat /etc/lsb-release | grep CHROME_MILESTONE | sed 's/.*=//')"  # Remove the "=" and everything before it (all but the version), add it to $OS
  case $(cat /etc/lsb-release) in
    *"Official Build"*) OS="$OS (Official Build)" ;;
    *"Developer Build"*) OS="$OS (Developer Build)" ;;
  esac
}

# Get your update channel
get_channel() {
  channel="unknown"
  case $LSB_RELEASE in 
    *"stable-chan"*) channel="Stable" ;;
    *"beta-chan"*) channel="Beta"     ;;
    *"dev-channel"*) channel="Developer" ;;
    *"canary-chan"*) channel="Canary" ;;   # This is an ASSUMPTION, I have never been on canary channel
  esac
}

# Get the cp architecture
get_arch() {
  arch="$(uname -m)"

}

# Get the host device model
get_host() {
  if [[ -f /sys/firmware/devicetree/base/model ]]; then
    host="$(cat /sys/firmware/devicetree/base/model)"
  fi
}

# Get the kernel name and release
get_kernel() {
  kernel="$(uname -rs)"
}

# Get the system uptime by removing the 'up ' from uptime -p
get_uptime() {
  uptime="$(uptime -p | sed 's/^.//;s/^.//;s/^.//')"
}

#package managers
#packages

# Get your terminal - is it Chrome, or Chromium?
get_terminal() {
  case $OS in           
    *"Chrome OS"*)
      terminal="Google Chrome"
    ;;
    
    *)
      terminal="Chromium"
    ;;
  esac
}

# Get the current shell
get_shell() {
  if [ -n $BASH_VERSION ]; then
     shell="bash $BASH_VERSION"
  elif [ -d /mnt/stateful_partition/var_overlay/db/pkg/app-shells ]; then

     dash_ver="$(ls /mnt/stateful_partition/var_overlay/db/pkg/app-shells | grep dash | sed 's/dash-//')"
     shell="dash $dash_ver"
     unset dash_ver
  else
    shell="dash" 
  fi

}

# Get your desktop (Which is the browser)
get_de() {
  case $OS in
    *"Chrome OS"*)
      DE="Google Chrome"
    ;;
    
    *)
      DE="Chromium"
    ;;
  esac
}

# Assue the WM is Ash. It should be.
get_wm() {
  WM="Ash"
}

# Get your system theme (light or dark)
get_theme() {
  theme=""
  
}
# Get 
get_cpu() {
  CPU="$(uname -p)"
  
}

# Get your GPU
#get_gpu() {
#  
#  
#}

# Get total and free RAM
get_ram() {
  total_ram="$(free --mega)"                            # Get output of free, in megabytes
  total_ram="$(echo $total_ram | sed 's/.*Mem: //')"     # Remove everything up to total ram
  total_ram="$(echo $total_ram | sed 's/\ .*//')"        # Remove everything after total ram
    
  used_ram="$(free --mega)"
  used_ram="$()"
  RAM="$total_ram MB"
  
}

# Get the size of your boot drive
#get_disk() {
#
#  
#}

get_info() {
  #get_config
  get_title
  get_line
  get_google_accounts
  get_os
  get_channel
  get_arch
  get_host
  get_kernel
  get_uptime
 # get_packages
  get_terminal
  get_shell
#  get_path
  get_de
  get_wm
  get_theme
  get_cpu
 # get_gpu
  get_ram
 # get_storage
  
}

print_info() {
  echo -e $title
  echo $line
  echo
}

get_info

print_info

echo $line
echo $g_accs
echo $seperate
echo $OS
echo $channel
echo $arch
echo $kernel
echo $uptime
echo $seperate
echo $terminal
echo $shell
echo $seperate
echo $DE
echo $WM
echo $theme
echo $seperate
echo $CPU
echo $RAM

exit 0
