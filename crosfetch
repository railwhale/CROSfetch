#!/usr/bin/env bash

# CROSfetch: My clone of neofetch, specialised for chromeOS
# https://github.com/railwhale/CROSfetch
#
# The MIT License (MIT)
#
# Copyright (c) 2022 Reuben Ferabend
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


version=0.0
# Setup Environment for CROSfetch
alias echo="echo -e"

#
# Default options
#
do_channel="auto"
do_arch="auto"
do_pack-man="auto"


# Make a basic prompt as a title
get_title() {
  title_ps1="\033[01;32m$USER@$HOSTNAME \033[00m"
  
}

# Get a seperator the length of the title
get_sep() {
  for char in $title_ps1; do
    seperate+="-"
  done
  
}

# Find the usernames of all logged in google accounts
get_google_accounts() {
   for img in /home/chronos/*.jpg; do                  # For every jpeg file in /home/chonos:
     img="$(echo $img | sed 's/*os\///')"              # Remove the path from the name (everything before 'os/')
     img="$(echo $img | sed 's/@*//')"                 # Remove the "@" and everything past it
     g_accs=""$g_accs","$img""                         # Add the name to $g_accs
   done
  unset img                                            # $img is not needed anymore
}

# Get your OS, wheather it be ChromeOS, ChromeOS Flex, ChromiumOS, or some other fork
get_os() {
  OS="$(cat /etc/os-release | grep RELEASE_NAME | sed 's/*=//')"   # Get the base name from /etc/os-release and put it in $OS
  # Add the main version number to $OS
  OS="$OS $(cat /etc/lsb-release | grep CHROME_MILESTONE | sed 's/*=//')"  # Remove the "=" and everything before it (all but the version), add it to $OS
  case $(cat /etc/lsb-release) in
    "Official Build") OS="$OS (Official Build)" ;;
    "Developer Build") OS="$OS (Developer Build)" ;;
  esac
}

# Get your update channel
get_channel() {
  channel="unknown"
  case $LSB_RELEASE in 
    "stable-chan") channel="Stable" ;;
    "beta-chan") channel="Beta"     ;;
    "dev-chan") channel="Developer" ;;
    "canary-chan") channel="Canary" ;;   # This is an ASSUMPTION, I have never been on canary channel
  esac
}

# Get the cp architecture
get_arch() {
  arch="$(uname -m)"

}

# Get the host device model
get_host() {
  if [[ -f /sys/firmware/devicetree/base/model ]]; then
    host="$(cat /sys/firmware/devicetree/base/model)"

}

# Get the kernel name and release
get_kernel() {
  kernel="$(uname -rs)"
}

# Get the system uptime by removing the 'up ' from uptime -p
get_uptime() {
  uptime="$(uptime -p | sed 's/^.//;s/^.//;s/^.//')"
  
}

package managers
packages

# Get your terminal - is it Chrome, or Chromium?
get_terminal() {
   case $OS in           
     "Chrome OS")
       terminal="crosh - Google Chrome"
     *)
       terminal="crosh - Chromium"
   esac
}

# Get the current shell
get_shell() {
  if [ -n $BASH_VERSION ]; then
     shell="Bash $BASH_VERSION"
  elif [ -d /mnt/stateful_partition/var_overlay/db/pkg/app-shells ]; then

     dash_ver="$(ls /mnt/stateful_partition/var_overlay/db/pkg/app-shells | grep dash | sed 's/dash-//')"
     shell="Dash $dash_ver"
     unset dash_ver
  else
    shell="Dash" 
  fi

}

# Get your desktop (Which is the browser)
get_de() {
  case $OS in
    "Chrome OS")
      DE="Google Chrome"
    *)
      DE="Chromium"
  esac
}

# Assue the WM is Ash. It should be.
get_wm() {
  WM="Ash"
}

# Get your system theme (light or dark)
get_theme() {
  theme=""
  
}
# Get 
get_cpu() {
  cpu="$(uname -p)"
  
}

# Get your GPU
get_gpu() {
  
  
}

# Get total and free RAM
get_ram() {
  total_ram="$(free --mega)"                            # get output of free, in MEGAbytes
  total_ram="$(echo $total_ram | sed 's/total used free shared buff\/cache available Mem: //')"   # Remove everything up to total ram
  total_ram="$(echo $total_ram | sed 's/ .*//')"        # Remove everything after total ram
  total_ram="$total_ram MB"
  
  used_ram="$(free --mega)"
  used_ram="$()"
  
}

# Get the size of your boot drive
() {

  
}

main() {
  get_title
  get_sep
  get_google_accounts
  get_os
  get_channel
  get_arch
  get_host
  get_kernel
  get_uptime
  get_packages
  get_terminal
  get_shell
  get_de
  get_wm
  get_theme
  get_cpu
  get_gpu
  get_ram
  get_storage
  
}
